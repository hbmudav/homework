import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

''' Pandas - это пакет для обработки и анализа данных, представленных в виде таблиц в различных форматах (CSV, Excel,
SQL и др.). Предлагает различные инструменты для фильтрации, агрегации и группировки данных. Принимает 2 типа данных:
- Series - одномерная структура данных.
- DataFrame - двумерная структура данных, двумерная таблица, состоящая из строк и столбцов с метками.
Создать DataFrame можно из словаря '''

data = [1, 2, 3, 4, 5]
ser = pd.Series(data)
print(ser)
print('\n')

data = {'Имя': ['Андрей', 'Ирина', 'Аня'],
    'Возраст': [30, 35, 25],
    'Город': ['Москва', 'Пермь', 'Омск']}
df = pd.DataFrame(data)
print(df)
print(' ')

filtered_df = df[df['Возраст'] < 30] # сортировка
sorted_df = filtered_df.sort_values('Возраст')
print(sorted_df)
print('\n')


''' NumPy - это пакет для научных вычислений. Он позволяет осуществлять быстрые операции с числовыми массивами,
матрицами, среди которых: математические, логические, манипуляции с формами, сортировка, выборка, ввод/вывод,
дискретные преобразования Фурье, основы линейной алгебры, базовые статистические операции, моделирование случайных
ситуаций и многое другое. '''

list = [3, 5, 10, 15]  # список чисел
arr = np.append(list, 30)  # создание числового массива из списка и добавление к нему значения
print(f'Числовой массив: {arr}')
print(f'Квадрат значений массива: {arr ** 2}')  # возведение в квадрат каждого числа в массиве
print(f'Среднее значение массива: {np.average(arr)}')  # вычисление среднего арифметического чисел массива
print(f'Сумма значений массива: {np.sum(arr)}')  # вычисление суммы чисел массива
print('\n')

matrix = np.array([(1, 2, 3), (4, 5, 6), (7, 8, 9)])  # создание матрицы
print(f'Матрица:\n {matrix}')
print(f'Квадрат значений матрицы:\n {matrix ** 2}')  # возведение в квадрат каждого числа в матрице
print(f'Среднее значение матрицы: {np.sum(matrix)}')  # вычисление среднего арифметического матрицы
print(f'Сумма значений матрицы: {np.average(matrix)}')  # вычисление суммы матрицы


''' Matplotlib - графический пакет для создания различных типов графиков (визуализация данных) на основе данных в
python с возможностью настройки внешнего вида.
- Линейный график
plt.plot([1, 2, 3, 4])
- Столбчатый график
plt.bar(['A', 'B', 'C', 'D'], [1, 2, 3, 4])
- Круговая диаграмма
plt.pie([1, 2, 3, 4], labels=['A', 'B', 'C', 'D']) '''

x = [0, 20, 40, 60, 80, 100]
y = [0, 50, 80, 100, 120, 130]

plt.plot(x, y, label='Динамика скорости')  # Создание линейного графика

plt.title('Динамика разгона автомобиля')  # Оформление заголовка и подписей к осям
plt.xlabel('Время, сек')
plt.ylabel('Скорость, км/ч')
plt.legend()  # Добавление легенды
plt.show()  # Отображение графика